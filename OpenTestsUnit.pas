unit OpenTestsUnit;

interface

uses
  ReportUnit,
  AccessConnectionUnit,
  System.Generics.Collections {TDictionary} ,
  BuilserUnit,
  ConnectionUnit,
  FMX.Forms,
  System.Classes,
  FMX.Types,
  FMX.Menus,
  FMX.Controls,
  System.UITypes,
  FMX.Edit;

type
  OpenTestsClass = class(TInterfacedObject, Builser)
  private
    /// <link>aggregation</link>
    Report1: Report;
    AOwner: TForm;
    NotifyEvent: TNotifyEvent;
    p: TPanel;
    Edit1: TEdit;
    procedure createOpen;
    procedure destroy;
    procedure setName(Sender: TObject);
  public
    constructor create(AOwner: TForm; NotifyEvent1: TNotifyEvent);
  end;

implementation

{ OpenTestsClass }

constructor OpenTestsClass.create(AOwner: TForm; NotifyEvent1: TNotifyEvent);
begin
  self.AOwner := AOwner;
  Report1:= Report.NewInstance;
  self.NotifyEvent:= NotifyEvent1;
  createOpen;
end;

procedure OpenTestsClass.createOpen;
var
  Connection1: Connection;
begin
  Connection1 := AccessConnection.create;
  p:= TPanel.Create(nil);
  with p do begin
    Parent:=AOwner;
    Align:=TAlignLayout.alCenter;
    Cursor:=crHandPoint;
    OnClick:=setName;
    Width:=800;
    Height:=600;
  end;
  Edit1:= TEdit.Create(nil);
  with Edit1 do begin
    Parent:=AOwner;
    Align:=TAlignLayout.alCenter;
    Width:=300;
    Text:='ÔÈÎ';
    Font.Style:=[TFontStyle.fsBold];
  end;
  Connection1.destroy;
end;

procedure OpenTestsClass.destroy;
begin
  p.Parent:=nil;
  Edit1.Parent:=nil;
end;

procedure OpenTestsClass.setName(Sender: TObject);
begin
  if length(Edit1.Text)>3 then
    NotifyEvent(nil);
  Report1.setUserName(Edit1.Text);
end;

end.
